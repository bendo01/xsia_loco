# Loco configuration file documentation
# Application logging configuration
logger:
  # Enable or disable logging.
  enable: true
  # Enable pretty backtrace (sets RUST_BACKTRACE=1)
  pretty_backtrace: true
  # Log level, options: trace, debug, info, warn or error.
  level: debug
  # Define the logging format. options: compact, pretty or json
  format: compact
  # By default the logger has filtering only logs that came from your code or logs that came from `loco` framework. to see all third party libraries
  # Uncomment the line below to override to see all third party libraries you can enable this config and override the logger filters.
  # override_filter: trace

# Web server configuration
server:
  # Port on which the server will listen. the server binding is 0.0.0.0:{PORT}
  port: 5150
  # Binding for the server (which interface to bind to)
  binding: localhost
  # The UI hostname or IP address that mailers will point to.
  host: http://localhost
  # Out of the box middleware configuration. to disable middleware you can changed the `enable` field to `false` of comment the middleware block
  middlewares:
    fallback:
      enable: false
      code: 404
    cors:
      enable: true
      allow_origins:
        - "*"
    static:
      enable: true
      must_exist: true
      precompressed: false
      folder:
        uri: "/public"
        path: "public"
      fallback: "public/404.html"
# Worker Configuration
workers:
  # specifies the worker mode. Options:
  #   - BackgroundQueue - Workers operate asynchronously in the background, processing queued.
  #   - ForegroundBlocking - Workers operate in the foreground and block until tasks are completed.
  #   - BackgroundAsync - Workers operate asynchronously in the background, processing tasks with async capabilities.
  mode: BackgroundQueue

# Queue Configuration
queue:
  # kind: Redis
  kind: Postgres
  # Redis connection URI
  # uri: {{ get_env(name="REDIS_URL", default="redis://127.0.0.1") }}
  uri: {{ get_env(name="DATABASE_URL", default="postgres://bendo01:talaso@localhost:5432/xsia_rust_v1") }}
  # Dangerously flush all data in Redis on startup. dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_flush: false

# Mailer Configuration.
mailer:
  # SMTP mailer configuration.
  smtp:
    # Enable/Disable smtp mailer.
    enable: true
    # SMTP server host. e.x localhost, smtp.gmail.com
    host: {{ get_env(name="SMTP_HOST", default="localhost") }}
    # SMTP server port
    port: {{ get_env(name="SMTP_PORT", default=1025) }}
    # Use secure connection (SSL/TLS).
    secure: {{ get_env(name="SMTP_SECURE", default=false) }}
    # auth:
    # user: {{ get_env(name="SMTP_USER", default="MS_VBqGqi@tritunas.ac.id") }}
    # password: {{ get_env(name="SMTP_PASSWORD", default="gO1Xm6uT2mlbOP70") }}
    # Override the SMTP hello name (default is the machine's hostname)
    # hello_name: {{ get_env(name="SMTP_SENDER", default="localhost") }}

# Initializers Configuration
# initializers:
#  oauth2:
#    authorization_code: # Authorization code grant type
#      - client_identifier: google # Identifier for the OAuth2 provider. Replace 'google' with your provider's name if different, must be unique within the oauth2 config.
#        ... other fields

# Database Configuration
database:
  # Database connection URI
  uri: {{ get_env(name="DATABASE_URL", default="postgres://bendo01:talaso@localhost:5432/xsia_rust_v1") }}
  # When enabled, the sql query will be logged.
  enable_logging: false
  # Set the timeout duration when acquiring a connection.
  connect_timeout: {{ get_env(name="DB_CONNECT_TIMEOUT", default="500") }}
  # Set the idle duration before closing a connection.
  idle_timeout: {{ get_env(name="DB_IDLE_TIMEOUT", default="500") }}
  # Minimum number of connections for a pool.
  min_connections: {{ get_env(name="DB_MIN_CONNECTIONS", default="1") }}
  # Maximum number of connections for a pool.
  max_connections: {{ get_env(name="DB_MAX_CONNECTIONS", default="1") }}
  # Run migration up when application loaded
  auto_migrate: true
  # Truncate database when application loaded. This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_truncate: false
  # Recreating schema when application loaded.  This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_recreate: false

# Authentication Configuration
auth:
  # JWT authentication
  jwt:
    # Secret key for token generation and verification
    secret: R5j5baMXsZGvM9ggMwbC
    # Token expiration time in seconds
    expiration: 604800 # 7 days

# Application Settings
settings:
  current_student_admission_academic_year_id: {{ get_env(name="CURRENT_STUDENT_ADMISSION_ACADEMIC_YEAR_ID", default="7fb68ca8-3376-4aef-b158-4c43f1b0f177") }}
  current_institution_id: {{ get_env(name="CURRENT_INSTITUTION_ID", default="ed7e8c02-451b-4548-aa81-26b8d0b7fdec") }}
  current_institution_code: {{ get_env(name="CURRENT_INSTITUTION_CODE", default="092010") }}
  app_directory: {{ get_env(name="APP_DIRECTORY", default=".") }}
  feeder_username: {{ get_env(name="FEEDER_USERNAME", default="admin") }}
  feeder_password: {{ get_env(name="FEEDER_PASSWORD", default="admin") }}
  feeder_url: {{ get_env(name="FEEDER_URL", default="localhost") }}
  system_mail_name: {{ get_env(name="SYSTEM_MAIL_NAME", default="xSIA System") }}
  system_mail_address: {{ get_env(name="SYSTEM_MAIL_ADDRESS", default="xSIA System") }}
  current_academic_year_id: {{ get_env(name="CURRENT_ACADEMIC_YEAR_ID", default="7fb68ca8-3376-4aef-b158-4c43f1b0f177") }}
  server_domain: {{ get_env(name="SERVER_DOMAIN", default="http://localhost:5150") }}
  is_production_midtrans_payment: {{ get_env(name="IS_PRODUCTION_MIDTRANS_PAYMENT", default=false) }}
